apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: kruise-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kruise-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - apps.kruise.io
  resources:
  - broadcastjobs
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apps.kruise.io
  resources:
  - broadcastjobs/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apps.kruise.io
  resources:
  - sidecarsets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apps.kruise.io
  resources:
  - sidecarsets/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apps
  resources:
  - controllerrevisions
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apps.kruise.io
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apps.kruise.io
  resources:
  - statefulsets/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
    - apps.kruise.io
  resources:
    - uniteddeployments
  verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
- apiGroups:
    - apps.kruise.io
  resources:
    - uniteddeployments/status
  verbs:
    - get
    - update
    - patch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: kruise-mutating-webhook-configuration
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: kruise-validating-webhook-configuration
webhooks:
  - clientConfig:
      caBundle: fake
      service:
        name: kruise-webhook-server-service
        namespace: kruise-system
        path: /validating-create-update-broadcastjob
    failurePolicy: Fail
    name: validating-create-update-broadcastjob.kruise.io
    namespaceSelector:
      matchExpressions:
        - key: control-plane
          operator: DoesNotExist
    rules:
      - apiGroups:
          - apps.kruise.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - broadcastjobs
  - clientConfig:
      caBundle: fake
      service:
        name: kruise-webhook-server-service
        namespace: kruise-system
        path: /validating-create-update-sidecarset
    failurePolicy: Fail
    name: validating-create-update-sidecarset.kruise.io
    namespaceSelector:
      matchExpressions:
        - key: control-plane
          operator: DoesNotExist
    rules:
      - apiGroups:
          - apps.kruise.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - sidecarsets
  - clientConfig:
      caBundle: fake
      service:
        name: kruise-webhook-server-service
        namespace: kruise-system
        path: /validating-create-update-statefulset
    failurePolicy: Fail
    name: validating-create-update-statefulset.kruise.io
    namespaceSelector:
      matchExpressions:
        - key: control-plane
          operator: DoesNotExist
    rules:
      - apiGroups:
          - apps.kruise.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - statefulsets
  - clientConfig:
      caBundle: fake
      service:
        name: kruise-webhook-server-service
        namespace: kruise-system
        path: /validating-create-update-uniteddeployment
    failurePolicy: Fail
    name: validating-create-update-uniteddeployment.kruise.io
    namespaceSelector:
      matchExpressions:
        - key: control-plane
          operator: DoesNotExist
    rules:
      - apiGroups:
          - apps.kruise.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - uniteddeployments
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: kruise-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kruise-manager-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: kruise-system
---
apiVersion: v1
kind: Secret
metadata:
  name: kruise-webhook-server-secret
  namespace: kruise-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: kruise-controller-manager-service
  namespace: kruise-system
spec:
  ports:
    - port: 443
  selector:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: kruise-controller-manager
  namespace: kruise-system
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  serviceName: kruise-controller-manager-service
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      labels:
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
    spec:
      containers:
        - command:
            - /manager
          args:
            - "--metrics-addr=127.0.0.1:8080"
            - "--logtostderr=true"
            - "--v=4"
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SECRET_NAME
              value: kruise-webhook-server-secret
          image: openkruise/kruise-manager:daily
          imagePullPolicy: Always
          name: manager
          ports:
            - containerPort: 8080
              name: metrics
              protocol: TCP
            - containerPort: 9876
              name: webhook-server
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - mountPath: /tmp/cert
              name: cert
              readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: kruise-webhook-server-secret
